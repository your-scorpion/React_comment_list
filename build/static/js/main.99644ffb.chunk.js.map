{"version":3,"sources":["store/actions/todoListActions.js","components/Task/Task.js","components/TodoList/TodoList.js","store/reducers/todoListReducer.js","components/AddTask/AddTask.js","components/ShowTask/ShowTask.js","components/EditTask/EditTask.js","components/AddTaskButton/AddTaskButton.js","components/Main/Main.js","App.js","store/reducers/rootReducer.js","store/localStorage/configureStore.js","index.js"],"names":["showButtonHandler","type","SHOW_BUTTON_HANDLER","addDialogHandler","ADD_DIALOG_HANDLER","editDialogHandler","EDIT_DIALOG_HANDLER","ADD_TASK","DELETE_TASK","SHOW_TASK","EDIT_TASK","Task","require","Date","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","lineThru","setState","fsinishMyTask","state","_this2","console","log","react_default","a","createElement","className","onClick","name","description","date","primereact_button","label","showTask","toggleShowTask","toggleEditDialogHandler","deleteTask","Component","connect","dispatch","payload","deleteTaskAction","showTaskAction","TodoList","todoList","tasks","map","item","index","key","components_Task_Task","id","toggleAddTaskDialog","generatIDfor_random_elem","Math","random","toString","substr","initialState","showName","showDescription","showDate","editedItemId","fiveAttempAbbtask","saveName","e","tempName","target","value","saveDescription","tempDescription","saveDate","tempDate","toLocaleString","dialog","header","visible","addDialogVisible","onHide","size","placeholder","onChange","maxLength","addItem","disabled","ddsds","ShowTask","concat","showTaskVisible","width","modal","EditTask","newName","newDescription","editDialogVisible","editTask","editTaskAction","AddTaskButton","Main","components_TodoList_TodoList","AddTask","components_ShowTask_ShowTask","components_EditTask_EditTask","components_AddTaskButton_AddTaskButton","App","HashRouter","basename","components_Main_Main","rootReducer","combineReducers","arguments","length","undefined","action","Todomyvar_3","task","objectSpread","toConsumableArray","filter","confconf","storage","sddsds","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","Provider","integration_react","loading","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.99644ffb.chunk.js","sourcesContent":["\nexport const ddsds = (payload) => ({ type: ADD_TASK, payload });\nexport const deleteTaskAction = (payload) => ({ type: DELETE_TASK, payload });\nexport const showTaskAction = (payload) => ({ type: SHOW_TASK, payload });\nexport const editTaskAction = (payload) => ({ type: EDIT_TASK, payload });\nexport const showButtonHandler = () => ({type: SHOW_BUTTON_HANDLER});\nexport const addDialogHandler = () => ({type: ADD_DIALOG_HANDLER});\nexport const editDialogHandler = () => ({type: EDIT_DIALOG_HANDLER});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport const ADD_TASK = '[AddTask] Add task';\nexport const DELETE_TASK = '[DeleteTask] Delete task from list';\nexport const SHOW_TASK = 'SHOW TASK action';\nexport const EDIT_TASK = 'EDIT TASK action';\nexport const SHOW_BUTTON_HANDLER = 'Toogle visible on/off';\nexport const ADD_DIALOG_HANDLER = 'Toggle Add dialog on/off';\nexport const EDIT_DIALOG_HANDLER = 'Toggle Edit dialog on/off';\n\n\n","import React from 'react';\nimport {\n\tdeleteTaskAction,\n\tshowTaskAction,\n\tshowButtonHandler,\n\teditDialogHandler\n} from '../../store/actions/todoListActions';\nimport { connect } from 'react-redux';\nimport { Component } from 'react';\nimport { Button } from 'primereact/button';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primeicons/primeicons.css';\n\nvar dateFormat = require('dateformat');\nvar now = new Date();\nvar date_for = (now, \"dddd, mmmm dS, yyyy, h:MM:ss TT\");\n\nclass Task extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tfsinishMyTask: false\n\t\t}\n\t}\n\n\tlineThru = () =>{\n\t\tthis.setState({fsinishMyTask: !this.state.fsinishMyTask});\n\t}\n\n\trender() {\n\t\tconsole.log('кнопки рендерим');\n\t\treturn (\n\t\t\t<div className=\"Task\">\n\t\t\t\t<div className={this.props.fsinishMyTask !== true ? \"task-left-column\" : \"task-left-column-done\"} onClick={() => this.lineThru()}>\n\t\t\t\t\t<p> {this.props.name} <b>написал:</b>  {this.props.description}\n\t\t\t\t\t<b> в</b> {this.props.date} </p>\n\n\n\t\t\t\t</div>\n\n\n\t\t\t\t<div className=\"tdd\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tlabel=\"читать весь комментарий\"\n\t\t\t\t\t\tclassName=\"p-button-success\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tthis.props.showTask(this.props);\n\t\t\t\t\t\t\tthis.props.toggleShowTask();\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tlabel=\"Отредактировать\"\n\t\t\t\t\t\tclassName=\"p-button-text\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tthis.props.showTask(this.props);\n\t\t\t\t\t\t\tthis.props.toggleEditDialogHandler();\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tlabel=\"Удалить\"\n\t\t\t\t\t\tclassName=\"p-button-danger\"\n\t\t\t\t\t\tonClick={() => this.props.deleteTask(this.props)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n\tdeleteTask: (payload) => dispatch(deleteTaskAction(payload)),\n\tshowTask: (payload) => dispatch(showTaskAction(payload)),\n\ttoggleShowTask: () => dispatch(showButtonHandler()),\n\ttoggleEditDialogHandler: () => dispatch(editDialogHandler())\n});\n\nexport default connect(null, mapDispatchToProps)(Task);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Task from '../Task/Task';\nimport { addDialogHandler } from '../../store/actions/todoListActions';\n\nimport ReactTimeAgo from 'react-time-ago'\nimport ru from 'javascript-time-ago/locale/ru'\n\n\n\nclass TodoList extends Component {\n\trender() {\n\t\tconsole.log(\"список получаем \");\n\t\treturn (\n\t\t\t<div className=\"TodoList\">\n\t\t\t\t{this.props.todoList.tasks.map((item, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className=\"border\" key={index}>\n\t\t\t\t\t\t\t<Task id={item.id} name={item.name} description={item.description} date={item.date}/>\n\n\n\t\t\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => ({\n\ttodoList: state.todoList\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n\ttoggleAddTaskDialog: () => dispatch(addDialogHandler())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\n\t\t/*<div className=\"ShowTask\">\n\t\t\t\t\t<p>Имя автора:</p>\n\t\t\t\t\t<p>{this.props.todoList.showName}</p>\n\t\t\t\t\t<p>Текст сообщения:</p>\n\t\t\t\t\t<p className=\"desc\">{this.props.todoList.showDescription}</p>\n\t\t\t\t</div>*/","import * as Todomyvar_3 from '../actions/todoListActions';\n\nexport const generatIDfor_random_elem = () => {\n\treturn '_' + Math.random().toString(36).substr(2, 9);\n};\n//дефолтная таска\nconst initialState = {\n\ttasks: [\n\t\t{\n\t\t\tid: generatIDfor_random_elem(),\n\t\t\tname: 'Цветков Максим',\n\t\t\tdescription: 'Ужасная система этот ваш react, голова кипит',\n\t\t\tdate: '2/13/2019, 9:29:46 AM'\n\t\t}\n\t],\n\tshowName: '',\n\tshowDescription: '',\n\tshowDate: '',\n\teditedItemId: ''\n};\n\nexport function todoReducer(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase Todomyvar_3.ADD_TASK: {\n\t\t\tconst task = { id: generatIDfor_random_elem(), name: action.payload.name, description: action.payload.description, date: action.payload.date };\n\t\t\treturn { ...state, tasks: [ ...state.tasks, task ] };\n\t\t}\n\t\tcase Todomyvar_3.DELETE_TASK: {\n\t\t\treturn { ...state, tasks: state.tasks.filter((task) => task.id !== action.payload.id) };\n\t\t}\n\t\tcase Todomyvar_3.SHOW_TASK: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tshowName: action.payload.name,\n\t\t\t\tshowDescription: action.payload.description,\n\t\t\t\tshowDate: action.payload.date,\n\t\t\t\teditedItemId: action.payload.id\n\t\t\t};\n\t\t}\n\t\tcase Todomyvar_3.EDIT_TASK: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttasks: state.tasks.map(\n\t\t\t\t\t(task) =>\n\t\t\t\t\t\ttask.id === state.editedItemId\n\t\t\t\t\t\t\t? { ...task, name: action.payload.name, description: action.payload.description, date: action.payload.date }\n\t\t\t\t\t\t\t: task\n\t\t\t\t)\n\t\t\t};\n\t\t}\n\t\tcase Todomyvar_3.SHOW_BUTTON_HANDLER: {\n\t\t\treturn { ...state, showTaskVisible: !state.showTaskVisible };\n\t\t}\n\t\tcase Todomyvar_3.ADD_DIALOG_HANDLER: {\n\t\t\treturn { ...state, addDialogVisible: !state.addDialogVisible };\n\t\t}\n\t\tcase Todomyvar_3.EDIT_DIALOG_HANDLER: {\n\t\t\treturn { ...state, editDialogVisible: !state.editDialogVisible };\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { ddsds, addDialogHandler } from '../../store/actions/todoListActions';\nimport { generatIDfor_random_elem } from '../../store/reducers/todoListReducer';\n\nimport { Button } from 'primereact/button';\nimport { Dialog } from 'primereact/dialog';\n\n\n\n\n\n\n\n\nclass fiveAttempAbbtask extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\ttempName: '',\n\t\t\ttempDescription: '',\n\t\t\ttempDate: ''\n\t\t};\n\t}\n\n\tsaveName = (e) => {\n\t\tthis.setState({ tempName: e.target.value });\n\t};\n// сохраняем введенные значения\n\tsaveDescription = (e) => {\n\t\tthis.setState({ tempDescription: e.target.value });\n\t\tconsole.log('сохраняем введенные значения описания');\n\t};\n\n\tsaveDate = (e) => { \n\t\tthis.setState({ tempDate: new Date().toLocaleString() });\n\t\tconsole.log('сохраняем введенные значения даты' + new Date().toLocaleString() );\n\t};\n\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"fiveAttempAbbtask\">\n\t\t\t\t<Dialog\n\t\t\t\t\theader=\"Напишите ваш комментарий\"\n\t\t\t\t\tvisible={this.props.todoList.addDialogVisible}\n\t\t\t\t\tonHide={this.props.toggleAddTaskDialog}\n\t\t\t\t\t>\n\n\t\t\t\t\t<p>Время:</p>\n\t\t\t\t\t<input type=\"text\" size=\"40\" placeholder=\"Нажмите для указания времени\" onClick={this.saveDate} value={this.state.tempDate} />\n\t\t\t\t\t<br />\n\n\t\t\t\t\t<p>Имя:</p>\n\t\t\t\t\t<textarea onChange={this.saveName} value={this.state.tempName} maxLength={120} />\n\t\t\t\t\t<br />\n\n\t\t\t\t\t<p>Комментарий:</p>\n\t\t\t\t\t<textarea onChange={this.saveDescription} value={this.state.tempDescription} maxLength={400} />\n\t\t\t\t\t<br />\n\n\n\n\n\n\t\t\t\t\t{this.state.tempName !== '' ? (\n\t\t\t\t\t\t//разные состояния кнопок\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tlabel=\"Закинуть коммент\"\n\t\t\t\t\t\t\tclassName=\"p-button-success\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tthis.props.addItem({\n\t\t\t\t\t\t\t\t\tid: generatIDfor_random_elem(),\n\t\t\t\t\t\t\t\t\tname: this.state.tempName,\n\t\t\t\t\t\t\t\t\tdescription: this.state.tempDescription,\n\t\t\t\t\t\t\t\t\tdate: this.state.tempDate\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tthis.setState({ id: '', tempName: '', tempDescription: '', tempDate: '' });\n\t\t\t\t\t\t\t\tthis.props.toggleAddTaskDialog();\n\t\t\t\t\t\t\t\t// пустой шаблон для данных\n\t\t\t\t\t\t\t\tconsole.log({ id: '', tempName: '', tempDescription: '', tempDate: '' });\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tlabel=\"Заполните поля\"\n\t\t\t\t\t\t\tclassName=\"p-button-success\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tthis.props.addItem({\n\t\t\t\t\t\t\t\t\tid: generatIDfor_random_elem(),\n\t\t\t\t\t\t\t\t\tname: this.state.tempName,\n\t\t\t\t\t\t\t\t\tdescription: this.state.tempDescription,\n\t\t\t\t\t\t\t\t\tdate: this.state.tempDate,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tthis.setState({ id: '', tempName: '', tempDescription: '', tempDate: ''  });\n\t\t\t\t\t\t\t\tthis.props.toggleAddTaskDialog();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</Dialog>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst dispatStackOverflow = (dispatch) => ({\n\t\n\taddItem: (payload) => dispatch(ddsds(payload)),\n\ttoggleAddTaskDialog: () => dispatch(addDialogHandler())\n});\n\nconst dataFromList = (state) => ({\n\ttodoList: state.todoList\n});\n\nexport default connect(dataFromList, dispatStackOverflow)(fiveAttempAbbtask);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Dialog } from 'primereact/dialog';\nimport { showButtonHandler } from '../../store/actions/todoListActions';\n\nclass ShowTask extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\trender() {\n\t\tconsole.log('показать комментарий сработало');\n\t\treturn (\n\t\t\t<Dialog header={`${this.props.todoList.showName}`} visible={this.props.todoList.showTaskVisible} width=\"80%\" modal={true} onHide={this.props.toggleShowTask}>\n\t\t\t\t<div className=\"ShowTask\">\n\t\t\t\t\t<p>Имя автора:</p>\n\t\t\t\t\t<p>{this.props.todoList.showName}</p>\n\t\t\t\t\t<p>Текст сообщения:</p>\n\t\t\t\t\t<p className=\"desc\">{this.props.todoList.showDescription}</p>\n\t\t\t\t</div>\n\t\t\t</Dialog>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => ({\n\ttodoList: state.todoList\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n\ttoggleShowTask: () => dispatch(showButtonHandler())\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowTask);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Dialog } from 'primereact/dialog';\nimport { editTaskAction, editDialogHandler } from '../../store/actions/todoListActions';\nimport { Button } from 'primereact/button';\n\n\n\nclass EditTask extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tnewName: '',\n\t\t\tnewDescription: ''\n\t\t};\n\t}\n\n\tsaveName = (e) => {\n\t\tthis.setState({ newName: e.target.value });\n\t};\n\n\tsaveDescription = (e) => {\n\t\tthis.setState({ newDescription: e.target.value });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"EditTask\">\n\t\t\t\t<Dialog\n\t\t\t\t\theader={`Редактирование комментария ${this.props.todoList.showName}`}\n\t\t\t\t\tvisible={this.props.todoList.editDialogVisible}\n\t\t\t\t\twidth=\"80%\"\n\t\t\t\t\tmodal={true}\n\t\t\t\t\tonHide={this.props.toggleEditDialogHandler}\n\t\t\t\t\t>\n\t\t\t\t\t<p>Имя автора</p>\n\t\t\t\t\t<input onChange={this.saveName} maxLength={70} value={this.props.todoList.showName}/>\n\n\n\n\t\t\t\t\t<p>Измените текст сообщения</p>\n\t\t\t\t\t<textarea onChange={this.saveDescription} maxLength={400} value={this.props.showDescription}/>\n\t\t\t\t\t<br />\n\n\t\t\t\t{/*кнопка*/}\n\t\t\t\t\t\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tlabel=\"Изменить комментарий (дата будет обновлена тоже)\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tthis.props.editTask({\n\t\t\t\t\t\t\t\t\tname: this.props.todoList.showName,\n\t\t\t\t\t\t\t\t\tdescription: this.state.newDescription,\n\t\t\t\t\t\t\t\t\tdate: Date().toLocaleString()\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\n\n\t\t\t\t</Dialog>\n\t\t\t</div>\n\t\t);\n\t}\n}\nconst mapStateToProps = (state) => ({\n\ttodoList: state.todoList\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n\teditTask: (payload) => dispatch(editTaskAction(payload)),\n\ttoggleEditDialogHandler: () => dispatch(editDialogHandler())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTask);\n","import React, { Component } from 'react';\nimport { addDialogHandler } from '../../store/actions/todoListActions';\nimport { connect } from 'react-redux';\n\nclass AddTaskButton extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\trender() {\n\t\t\tconsole.log('добавляется');\n\t\treturn (\n\t\t\t<div className=\"btn_style\">\n\t\t\t\t<button className=\"add-button\" onClick={this.props.toggleAddTaskDialog}> Добавить комментарий </button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => ({\n\ttodoList: state.todoList\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n\ttoggleAddTaskDialog: () => dispatch(addDialogHandler())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTaskButton);\n","import React, { Component } from 'react';\nimport TodoList from '../TodoList/TodoList';\nimport AddTask from '../AddTask/AddTask';\nimport ShowTask from '../ShowTask/ShowTask';\nimport EditTask from '../EditTask/EditTask';\nimport AddTaskButton from '../AddTaskButton/AddTaskButton';\n\nclass Main extends Component {\n\trender() {\n\t\treturn (\n\t\t\t\t<div className=\"Main\">\n\t\t\t\t\t<TodoList/>\n\t\t\t\t\t<br />\n\t\t\t\t\t<AddTask />\n\t\t\t\t\t<ShowTask />\n\t\t\t\t\t<EditTask />\n\t\t\t\t\t<AddTaskButton />\n\t\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Main;\n","import './App.scss';\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Main from './components/Main/Main';\n//HashRouter дл статических сайтов\nimport { HashRouter } from 'react-router-dom';\n\n//Рендеринг Router\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<HashRouter basename=\"/\">\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<Main />\n\t\t\t\t</div>\n\t\t\t</HashRouter>\n\t\t);\n\t}\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport {todoReducer} from './todoListReducer';\n\nexport const rootReducer = combineReducers({todoList: todoReducer});","import { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // для localStorage \nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension'; //Redux не работает, если расширение Redux DevTools не установлено\n\nimport thunk from 'redux-thunk';\nimport { rootReducer } from '../reducers/rootReducer';\n\nconst confconf = {\n    key: 'root',\n    storage,\n  }\n\n\n\n\n  \n  const sddsds = persistReducer(confconf, rootReducer)\n\n  const store = createStore(sddsds, {}, composeWithDevTools(applyMiddleware(thunk)));\n  let persistor = persistStore(store)\n\n  export { store, persistor };\n  \n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport Provider from 'react-redux/es/components/Provider';\n//как я понял без redux-persist  не удается работать с localStorage\nimport { PersistGate } from 'redux-persist/integration/react';\nimport {store, persistor} from './store/localStorage/configureStore';\n\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<PersistGate loading={null} persistor={persistor}>\n\t\t\t<App />\n\t\t</PersistGate>\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\n"],"sourceRoot":""}